/*
Tabular API

Tabular OpenAPI Definition

API version: 1.56.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tabular

import (
	"encoding/json"
)

// checks if the UpdateRoleMemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRoleMemberRequest{}

// UpdateRoleMemberRequest struct for UpdateRoleMemberRequest
type UpdateRoleMemberRequest struct {
	MemberId  *string `json:"memberId,omitempty"`
	WithAdmin *bool   `json:"withAdmin,omitempty"`
}

// NewUpdateRoleMemberRequest instantiates a new UpdateRoleMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoleMemberRequest() *UpdateRoleMemberRequest {
	this := UpdateRoleMemberRequest{}
	return &this
}

// NewUpdateRoleMemberRequestWithDefaults instantiates a new UpdateRoleMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoleMemberRequestWithDefaults() *UpdateRoleMemberRequest {
	this := UpdateRoleMemberRequest{}
	return &this
}

// GetMemberId returns the MemberId field value if set, zero value otherwise.
func (o *UpdateRoleMemberRequest) GetMemberId() string {
	if o == nil || IsNil(o.MemberId) {
		var ret string
		return ret
	}
	return *o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleMemberRequest) GetMemberIdOk() (*string, bool) {
	if o == nil || IsNil(o.MemberId) {
		return nil, false
	}
	return o.MemberId, true
}

// HasMemberId returns a boolean if a field has been set.
func (o *UpdateRoleMemberRequest) HasMemberId() bool {
	if o != nil && !IsNil(o.MemberId) {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given string and assigns it to the MemberId field.
func (o *UpdateRoleMemberRequest) SetMemberId(v string) {
	o.MemberId = &v
}

// GetWithAdmin returns the WithAdmin field value if set, zero value otherwise.
func (o *UpdateRoleMemberRequest) GetWithAdmin() bool {
	if o == nil || IsNil(o.WithAdmin) {
		var ret bool
		return ret
	}
	return *o.WithAdmin
}

// GetWithAdminOk returns a tuple with the WithAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleMemberRequest) GetWithAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.WithAdmin) {
		return nil, false
	}
	return o.WithAdmin, true
}

// HasWithAdmin returns a boolean if a field has been set.
func (o *UpdateRoleMemberRequest) HasWithAdmin() bool {
	if o != nil && !IsNil(o.WithAdmin) {
		return true
	}

	return false
}

// SetWithAdmin gets a reference to the given bool and assigns it to the WithAdmin field.
func (o *UpdateRoleMemberRequest) SetWithAdmin(v bool) {
	o.WithAdmin = &v
}

func (o UpdateRoleMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRoleMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MemberId) {
		toSerialize["memberId"] = o.MemberId
	}
	if !IsNil(o.WithAdmin) {
		toSerialize["withAdmin"] = o.WithAdmin
	}
	return toSerialize, nil
}

type NullableUpdateRoleMemberRequest struct {
	value *UpdateRoleMemberRequest
	isSet bool
}

func (v NullableUpdateRoleMemberRequest) Get() *UpdateRoleMemberRequest {
	return v.value
}

func (v *NullableUpdateRoleMemberRequest) Set(val *UpdateRoleMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRoleMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRoleMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRoleMemberRequest(val *UpdateRoleMemberRequest) *NullableUpdateRoleMemberRequest {
	return &NullableUpdateRoleMemberRequest{value: val, isSet: true}
}

func (v NullableUpdateRoleMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRoleMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
