/*
Tabular API

Tabular OpenAPI Definition

API version: 1.54.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tabular

import (
	"encoding/json"
)

// checks if the LoadTableRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadTableRequest{}

// LoadTableRequest struct for LoadTableRequest
type LoadTableRequest struct {
	Bucket                 *string            `json:"bucket,omitempty"`
	Prefixes               []string           `json:"prefixes,omitempty"`
	Mode                   *string            `json:"mode,omitempty"`
	FileLoaderConfig       *FileLoaderConfig  `json:"fileLoaderConfig,omitempty"`
	CancelRunningLoad      *bool              `json:"cancelRunningLoad,omitempty"`
	OnCompletionProperties *map[string]string `json:"onCompletionProperties,omitempty"`
}

// NewLoadTableRequest instantiates a new LoadTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadTableRequest() *LoadTableRequest {
	this := LoadTableRequest{}
	return &this
}

// NewLoadTableRequestWithDefaults instantiates a new LoadTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadTableRequestWithDefaults() *LoadTableRequest {
	this := LoadTableRequest{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *LoadTableRequest) GetBucket() string {
	if o == nil || IsNil(o.Bucket) {
		var ret string
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadTableRequest) GetBucketOk() (*string, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *LoadTableRequest) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given string and assigns it to the Bucket field.
func (o *LoadTableRequest) SetBucket(v string) {
	o.Bucket = &v
}

// GetPrefixes returns the Prefixes field value if set, zero value otherwise.
func (o *LoadTableRequest) GetPrefixes() []string {
	if o == nil || IsNil(o.Prefixes) {
		var ret []string
		return ret
	}
	return o.Prefixes
}

// GetPrefixesOk returns a tuple with the Prefixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadTableRequest) GetPrefixesOk() ([]string, bool) {
	if o == nil || IsNil(o.Prefixes) {
		return nil, false
	}
	return o.Prefixes, true
}

// HasPrefixes returns a boolean if a field has been set.
func (o *LoadTableRequest) HasPrefixes() bool {
	if o != nil && !IsNil(o.Prefixes) {
		return true
	}

	return false
}

// SetPrefixes gets a reference to the given []string and assigns it to the Prefixes field.
func (o *LoadTableRequest) SetPrefixes(v []string) {
	o.Prefixes = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *LoadTableRequest) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadTableRequest) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *LoadTableRequest) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *LoadTableRequest) SetMode(v string) {
	o.Mode = &v
}

// GetFileLoaderConfig returns the FileLoaderConfig field value if set, zero value otherwise.
func (o *LoadTableRequest) GetFileLoaderConfig() FileLoaderConfig {
	if o == nil || IsNil(o.FileLoaderConfig) {
		var ret FileLoaderConfig
		return ret
	}
	return *o.FileLoaderConfig
}

// GetFileLoaderConfigOk returns a tuple with the FileLoaderConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadTableRequest) GetFileLoaderConfigOk() (*FileLoaderConfig, bool) {
	if o == nil || IsNil(o.FileLoaderConfig) {
		return nil, false
	}
	return o.FileLoaderConfig, true
}

// HasFileLoaderConfig returns a boolean if a field has been set.
func (o *LoadTableRequest) HasFileLoaderConfig() bool {
	if o != nil && !IsNil(o.FileLoaderConfig) {
		return true
	}

	return false
}

// SetFileLoaderConfig gets a reference to the given FileLoaderConfig and assigns it to the FileLoaderConfig field.
func (o *LoadTableRequest) SetFileLoaderConfig(v FileLoaderConfig) {
	o.FileLoaderConfig = &v
}

// GetCancelRunningLoad returns the CancelRunningLoad field value if set, zero value otherwise.
func (o *LoadTableRequest) GetCancelRunningLoad() bool {
	if o == nil || IsNil(o.CancelRunningLoad) {
		var ret bool
		return ret
	}
	return *o.CancelRunningLoad
}

// GetCancelRunningLoadOk returns a tuple with the CancelRunningLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadTableRequest) GetCancelRunningLoadOk() (*bool, bool) {
	if o == nil || IsNil(o.CancelRunningLoad) {
		return nil, false
	}
	return o.CancelRunningLoad, true
}

// HasCancelRunningLoad returns a boolean if a field has been set.
func (o *LoadTableRequest) HasCancelRunningLoad() bool {
	if o != nil && !IsNil(o.CancelRunningLoad) {
		return true
	}

	return false
}

// SetCancelRunningLoad gets a reference to the given bool and assigns it to the CancelRunningLoad field.
func (o *LoadTableRequest) SetCancelRunningLoad(v bool) {
	o.CancelRunningLoad = &v
}

// GetOnCompletionProperties returns the OnCompletionProperties field value if set, zero value otherwise.
func (o *LoadTableRequest) GetOnCompletionProperties() map[string]string {
	if o == nil || IsNil(o.OnCompletionProperties) {
		var ret map[string]string
		return ret
	}
	return *o.OnCompletionProperties
}

// GetOnCompletionPropertiesOk returns a tuple with the OnCompletionProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadTableRequest) GetOnCompletionPropertiesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.OnCompletionProperties) {
		return nil, false
	}
	return o.OnCompletionProperties, true
}

// HasOnCompletionProperties returns a boolean if a field has been set.
func (o *LoadTableRequest) HasOnCompletionProperties() bool {
	if o != nil && !IsNil(o.OnCompletionProperties) {
		return true
	}

	return false
}

// SetOnCompletionProperties gets a reference to the given map[string]string and assigns it to the OnCompletionProperties field.
func (o *LoadTableRequest) SetOnCompletionProperties(v map[string]string) {
	o.OnCompletionProperties = &v
}

func (o LoadTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadTableRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.Prefixes) {
		toSerialize["prefixes"] = o.Prefixes
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.FileLoaderConfig) {
		toSerialize["fileLoaderConfig"] = o.FileLoaderConfig
	}
	if !IsNil(o.CancelRunningLoad) {
		toSerialize["cancelRunningLoad"] = o.CancelRunningLoad
	}
	if !IsNil(o.OnCompletionProperties) {
		toSerialize["onCompletionProperties"] = o.OnCompletionProperties
	}
	return toSerialize, nil
}

type NullableLoadTableRequest struct {
	value *LoadTableRequest
	isSet bool
}

func (v NullableLoadTableRequest) Get() *LoadTableRequest {
	return v.value
}

func (v *NullableLoadTableRequest) Set(val *LoadTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadTableRequest(val *LoadTableRequest) *NullableLoadTableRequest {
	return &NullableLoadTableRequest{value: val, isSet: true}
}

func (v NullableLoadTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
