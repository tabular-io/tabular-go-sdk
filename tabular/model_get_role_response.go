/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tabular

import (
	"encoding/json"
)

// checks if the GetRoleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoleResponse{}

// GetRoleResponse struct for GetRoleResponse
type GetRoleResponse struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Members []MemberEntry `json:"members,omitempty"`
	Children []RoleRef `json:"children,omitempty"`
}

// NewGetRoleResponse instantiates a new GetRoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoleResponse() *GetRoleResponse {
	this := GetRoleResponse{}
	return &this
}

// NewGetRoleResponseWithDefaults instantiates a new GetRoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoleResponseWithDefaults() *GetRoleResponse {
	this := GetRoleResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRoleResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRoleResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetRoleResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRoleResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRoleResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRoleResponse) SetName(v string) {
	o.Name = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *GetRoleResponse) GetMembers() []MemberEntry {
	if o == nil || IsNil(o.Members) {
		var ret []MemberEntry
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleResponse) GetMembersOk() ([]MemberEntry, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *GetRoleResponse) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MemberEntry and assigns it to the Members field.
func (o *GetRoleResponse) SetMembers(v []MemberEntry) {
	o.Members = v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *GetRoleResponse) GetChildren() []RoleRef {
	if o == nil || IsNil(o.Children) {
		var ret []RoleRef
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleResponse) GetChildrenOk() ([]RoleRef, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *GetRoleResponse) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []RoleRef and assigns it to the Children field.
func (o *GetRoleResponse) SetChildren(v []RoleRef) {
	o.Children = v
}

func (o GetRoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	return toSerialize, nil
}

type NullableGetRoleResponse struct {
	value *GetRoleResponse
	isSet bool
}

func (v NullableGetRoleResponse) Get() *GetRoleResponse {
	return v.value
}

func (v *NullableGetRoleResponse) Set(val *GetRoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoleResponse(val *GetRoleResponse) *NullableGetRoleResponse {
	return &NullableGetRoleResponse{value: val, isSet: true}
}

func (v NullableGetRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


