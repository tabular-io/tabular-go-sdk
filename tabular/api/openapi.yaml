openapi: 3.0.1
info:
  description: Tabular OpenAPI Definition
  title: Tabular API
  version: 1.54.5
servers:
- description: Tabular API Endpoint
  url: "{scheme}://{server}"
  variables:
    server:
      default: api.tabular.io
    scheme:
      default: https
paths:
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/grants:
    delete:
      operationId: revokePrivilegesOnWarehouse
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleWarehouseGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Revoke privileges on a warehouse
    put:
      operationId: grantPrivilegesOnWarehouse
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleWarehouseGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Grant privileges on a warehouse
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/tables/{tableId}/grants:
    delete:
      operationId: revokePrivilegesOnTable
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleTableGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Revoke privileges on table
    get:
      operationId: listTableRoleGrants
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListTableRoleGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: List all grants for table
    put:
      operationId: grantPrivilegesOnTable
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleTableGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Grant privileges on table
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/grants:
    delete:
      operationId: revokePrivilegesOnDatabase
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleDatabaseGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Revoke privileges on database
    get:
      operationId: listDatabaseRoleGrants
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListDatabaseRoleGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: List all grants for database
    put:
      operationId: grantPrivilegesOnDatabase
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleDatabaseGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Grant privileges on database
  /v1/organizations/{organizationId}/roles/{roleName}:
    delete:
      operationId: deleteRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: force
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Delete Role
    get:
      operationId: getRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get role
    put:
      operationId: updateRoleName
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UpdateRoleNameResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Update role
  /v1/organizations/{organizationId}/roles/{roleName}/members:
    delete:
      operationId: removeRoleMembers
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateRoleMemberRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Remove members from a role
    put:
      operationId: addRoleMembers
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateRoleMemberRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Add members to a role
  /v1/organizations/{organizationId}/roles/{roleName}/children:
    delete:
      operationId: removeChildFromRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Remove child from role
    put:
      operationId: addChildToRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Add child to role
  /v1/organizations/{organizationId}/labels/{labelId}/grants:
    delete:
      operationId: revokePrivilegesOnLabel
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleLabelGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Revoke privileges on a label.
    get:
      operationId: listLabelRoleGrants
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRoleLabelGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: List all grants for label
    put:
      operationId: grantPrivilegesOnLabel
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleLabelGrantRequest'
              type: array
        required: true
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Grant privileges on a label.
  /v1/organizations/{organizationId}/labels/{labelId}/field/masking:
    put:
      operationId: updateLabelFieldMaskingMode
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabelFieldMaskingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Change label field masking mode.
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/tables:
    post:
      operationId: createTableFromFiles
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTableResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create and load a table with the data found in a bucket.
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/tables/{tableId}/loads:
    post:
      operationId: loadTableData
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadTableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoadTableResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: One time batch load a table with the data found in a bucket.
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/:
    post:
      operationId: createDatabase
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDatabaseResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Creates database with extended information
  /v1/organizations/{organizationId}/warehouses/:
    get:
      operationId: listWarehouses
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListWarehouseResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: List all warehouses
    post:
      operationId: createWarehouse
      parameters:
      - explode: true
        in: query
        name: creatorRoleId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarehouseRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateWarehouseResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create a warehouse
  /v1/organizations/{organizationId}/storage-profiles/:
    post:
      operationId: createStorageProfile
      parameters:
      - explode: true
        in: query
        name: creatorRoleId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateS3StorageProfileRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateS3StorageProfileResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create a storage profile
  /v1/organizations/{organizationId}/roles/:
    post:
      operationId: createRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create role
  /v1/organizations/{organizationId}/labels/:
    get:
      operationId: listLabels
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListLabelsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get organization labels
    post:
      operationId: createLabel
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Add a label to an organization
  /v1/organizations/{organizationId}/iam/credentials/service-account:
    post:
      operationId: createServiceAccountCredential
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountCredentialRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCredentialResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create a service credential
  /v1/organizations/{organizationId}/iam/credentials/oidc:
    post:
      operationId: createOIDCIntegration
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOidcCredentialRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCredentialResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create an OIDC Integration
  /v1/organizations/{organizationId}/iam/credentials/member:
    post:
      operationId: createMemberCredential
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMemberCredentialRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCredentialResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create a member credential
  /v1/organizations/{organizationId}/iam/credentials/custom-idp:
    post:
      operationId: createCustomerIdentityProviderCredential
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomIdpCredentialRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCredentialResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create a custom identity provider credential
  /v1/organizations/{organizationId}/iam/credentials/aws:
    post:
      operationId: createIamRoleMapping
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIamRoleMappingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCredentialResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Create an IAM Role Mapping
  /v1/organizations/{organizationId}/labels/{labelId}:
    delete:
      operationId: deleteLabel
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Remove a label from an organization.
    get:
      operationId: getLabel
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetLabelResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get organization label
    patch:
      operationId: updateLabel
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateLabelRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Update organization label.
  /v1/organizations/{organizationId}/warehouses/{warehouseId}:
    delete:
      operationId: deleteWarehouse
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Delete warehouse by id
    get:
      operationId: getWarehouse
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetWarehouseResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get a warehouse by id
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/grants/roles/{roleId}:
    get:
      operationId: listWarehouseRoleGrantsForRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetRoleWarehouseGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get warehouse grants for role id
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{database}:
    get:
      operationId: getDatabase
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: database
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          default: name
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetDatabaseResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Gets extended information on a database
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/tables/{table}:
    get:
      operationId: getTable
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetTableResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get table information
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/tables/{tableId}/loads/{tableLoadId}:
    get:
      operationId: getLoadTableDataStatus
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableLoadId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoadTableStatus'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: One time batch load a table with the data found in a bucket.
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/tables/{tableId}/grants/roles/{roleId}:
    get:
      operationId: listTableRoleGrantsForRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListTableRoleGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get table grants for role id
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}/grants/roles/{roleId}:
    get:
      operationId: listDatabaseRoleGrantsForRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetRoleDatabaseGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get database grants for role id
  /v1/organizations/{organizationId}/storage-profiles/{storageProfileId}:
    delete:
      operationId: deleteStorageProfile
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: storageProfileId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Delete a storage profile by ID
    get:
      operationId: getStorageProfile
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: storageProfileId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetStorageProfileResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get a storage profile by ID
  /v1/organizations/{organizationId}/members/:
    get:
      operationId: listOrganizationMembers
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get organization members
  /v1/organizations/{organizationId}/labels/{labelId}/grants/roles/{roleId}:
    get:
      operationId: listLabelRoleGrantsForRole
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListRoleLabelGrantsResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Get label grants for role id.
  /v1/organizations/{organizationId}/iam/credentials/{credentialKey}:
    delete:
      operationId: deleteMemberCredential
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: credentialKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Delete a credential
    get:
      operationId: getCredential
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: credentialKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCredentialResponse'
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Fetch information about a credential
  /v1/organizations/{organizationId}/warehouses/{warehouseId}/databases/{databaseId}:
    delete:
      operationId: deleteDatabase
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: warehouseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - TabularJWTAuth: []
      summary: Drops a database
components:
  schemas:
    RoleWarehouseGrantRequest:
      example:
        withGrant: true
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
      properties:
        roleId:
          format: uuid
          type: string
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
      type: object
    RoleTableGrantRequest:
      example:
        withGrant: true
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
      properties:
        roleId:
          format: uuid
          type: string
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
      type: object
    RoleDatabaseGrantRequest:
      example:
        withGrant: true
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
      properties:
        roleId:
          format: uuid
          type: string
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
      type: object
    UpdateRoleRequest:
      example:
        roleName: roleName
      properties:
        roleName:
          type: string
      type: object
    UpdateRoleNameResponse:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      type: object
    UpdateRoleMemberRequest:
      example:
        withAdmin: true
        memberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        memberId:
          format: uuid
          type: string
        withAdmin:
          type: boolean
      type: object
    RoleLabelGrantRequest:
      example:
        withGrant: true
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
      properties:
        roleId:
          format: uuid
          type: string
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
      type: object
    UpdateLabelFieldMaskingRequest:
      example:
        maskMode: NONE
      properties:
        maskMode:
          enum:
          - NONE
          - "NULL"
          - HIDE
          type: string
      type: object
    Label:
      example:
        allowedResourceTypes:
        - WAREHOUSE
        - WAREHOUSE
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        maskMode: NONE
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        allowedResourceTypes:
          items:
            enum:
            - WAREHOUSE
            - DATABASE
            - TABLE
            - FIELD
            - STORAGE_PROFILE
            - ROLE
            type: string
          type: array
          uniqueItems: true
        maskMode:
          enum:
          - NONE
          - "NULL"
          - HIDE
          type: string
      type: object
    CreateTableRequest:
      example:
        bucket: bucket
        mode: UNKNOWN
        prefixes:
        - prefixes
        - prefixes
        useMaps: true
        fileLoaderConfig:
          hasHeader: true
          fileFilter: fileFilter
          timestampNTZFormat: timestampNTZFormat
          dateFormat: dateFormat
          delimiter: delimiter
          timestampFormat: timestampFormat
          tableBranchName: tableBranchName
          escape: escape
          fileFormat: fileFormat
        inferPartitionsFromPath: true
        tableName: tableName
        onCompletionProperties:
          key: onCompletionProperties
      properties:
        tableName:
          type: string
        bucket:
          type: string
        prefixes:
          items:
            type: string
          type: array
        mode:
          enum:
          - UNKNOWN
          - CREATE
          - CREATE_LOAD
          - CREATE_AUTO_LOAD
          type: string
        fileLoaderConfig:
          $ref: '#/components/schemas/FileLoaderConfig'
        useMaps:
          type: boolean
        onCompletionProperties:
          additionalProperties:
            type: string
          type: object
        inferPartitionsFromPath:
          type: boolean
      type: object
    FileLoaderConfig:
      example:
        hasHeader: true
        fileFilter: fileFilter
        timestampNTZFormat: timestampNTZFormat
        dateFormat: dateFormat
        delimiter: delimiter
        timestampFormat: timestampFormat
        tableBranchName: tableBranchName
        escape: escape
        fileFormat: fileFormat
      properties:
        fileFormat:
          type: string
        delimiter:
          type: string
        hasHeader:
          type: boolean
        fileFilter:
          type: string
        tableBranchName:
          type: string
        escape:
          type: string
        dateFormat:
          type: string
        timestampFormat:
          type: string
        timestampNTZFormat:
          type: string
      type: object
    CreateTableResponse:
      example:
        tableReferenceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tableLoadId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        tableReferenceId:
          format: uuid
          type: string
        tableLoadId:
          format: uuid
          type: string
      type: object
    LoadTableRequest:
      example:
        bucket: bucket
        mode: UNKNOWN
        prefixes:
        - prefixes
        - prefixes
        fileLoaderConfig:
          hasHeader: true
          fileFilter: fileFilter
          timestampNTZFormat: timestampNTZFormat
          dateFormat: dateFormat
          delimiter: delimiter
          timestampFormat: timestampFormat
          tableBranchName: tableBranchName
          escape: escape
          fileFormat: fileFormat
        cancelRunningLoad: true
        onCompletionProperties:
          key: onCompletionProperties
      properties:
        bucket:
          type: string
        prefixes:
          items:
            type: string
          type: array
        mode:
          enum:
          - UNKNOWN
          - APPEND
          - REPLACE
          - APPEND_AUTO_LOAD
          - REPLACE_AUTO_LOAD
          type: string
        fileLoaderConfig:
          $ref: '#/components/schemas/FileLoaderConfig'
        cancelRunningLoad:
          type: boolean
        onCompletionProperties:
          additionalProperties:
            type: string
          type: object
      type: object
    LoadTableResponse:
      example:
        tableLoadId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        tableLoadId:
          format: uuid
          type: string
      type: object
    CreateDatabaseRequest:
      example:
        name: name
        properties:
          key: properties
      properties:
        name:
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    CreateDatabaseResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        warehouseId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdBy: createdBy
        lastModifiedBy: lastModifiedBy
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModified: 2000-01-23T04:56:07.000+00:00
        properties:
          key: properties
      properties:
        id:
          format: uuid
          type: string
        warehouseId:
          format: uuid
          type: string
        name:
          type: string
        createdBy:
          type: string
        createdAt:
          format: date-time
          type: string
        lastModifiedBy:
          type: string
        lastModified:
          format: date-time
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    CreateWarehouseRequest:
      example:
        storageProfileId: storageProfileId
        name: name
      properties:
        name:
          type: string
        storageProfileId:
          type: string
      type: object
    CreateWarehouseResponse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        storageProfile: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
        properties:
          key: properties
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        region:
          type: string
        organizationId:
          format: uuid
          type: string
        storageProfile:
          format: uuid
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    CreateS3StorageProfileRequest:
      example:
        bucket: bucket
        roleArn: roleArn
        region: region
      properties:
        region:
          type: string
        bucket:
          type: string
        roleArn:
          type: string
      type: object
    CreateS3StorageProfileResponse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bucket: bucket
        accountId: accountId
        roleArn: roleArn
        externalId: externalId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
        properties: "{}"
      properties:
        id:
          format: uuid
          type: string
        organizationId:
          format: uuid
          type: string
        accountId:
          type: string
        region:
          type: string
        bucket:
          type: string
        roleArn:
          type: string
        externalId:
          type: string
        properties:
          type: object
      type: object
    CreateRoleRequest:
      example:
        roleName: roleName
      properties:
        roleName:
          type: string
      type: object
    CreateRoleResponse:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      type: object
    CreateLabelRequest:
      example:
        allowedResourceTypes:
        - WAREHOUSE
        - WAREHOUSE
        description: description
        labelName: labelName
      properties:
        labelName:
          type: string
        description:
          type: string
        allowedResourceTypes:
          items:
            enum:
            - WAREHOUSE
            - DATABASE
            - TABLE
            - FIELD
            - STORAGE_PROFILE
            - ROLE
            type: string
          type: array
          uniqueItems: true
      type: object
    CreateServiceAccountCredentialRequest:
      example:
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
      properties:
        name:
          type: string
        roleId:
          format: uuid
          type: string
      type: object
    CreateCredentialResponse:
      example:
        credentialSecret: credentialSecret
        name: name
        credentialId: credentialId
      properties:
        name:
          type: string
        credentialId:
          type: string
        credentialSecret:
          type: string
      type: object
    CreateOidcCredentialRequest:
      example:
        oidcClaimValue: oidcClaimValue
        oidcIssuer: oidcIssuer
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oidcClaimKey: oidcClaimKey
        name: name
      properties:
        name:
          type: string
        oidcIssuer:
          type: string
        oidcClaimKey:
          type: string
        oidcClaimValue:
          type: string
        roleId:
          format: uuid
          type: string
      type: object
    CreateMemberCredentialRequest:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    CreateCustomIdpCredentialRequest:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    CreateIamRoleMappingRequest:
      example:
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        awsRoleArn: awsRoleArn
      properties:
        name:
          type: string
        awsRoleArn:
          type: string
        roleId:
          format: uuid
          type: string
      type: object
    UpdateLabelRequest:
      properties:
        labelName:
          type: string
        description:
          type: string
        allowedResourceTypes:
          items:
            enum:
            - WAREHOUSE
            - DATABASE
            - TABLE
            - FIELD
            - STORAGE_PROFILE
            - ROLE
            type: string
          type: array
          uniqueItems: true
      type: object
    GetWarehouseResponse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        storageProfile: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
        properties:
          key: properties
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        region:
          type: string
        organizationId:
          format: uuid
          type: string
        storageProfile:
          format: uuid
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    GetRoleWarehouseGrantsResponse:
      example:
        authorizations:
        - withGrant: true
          resource: resource
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
          subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceType: resourceType
        - withGrant: true
          resource: resource
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
          subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceType: resourceType
      properties:
        authorizations:
          items:
            $ref: '#/components/schemas/WarehouseAuthorization'
          type: array
      type: object
    WarehouseAuthorization:
      example:
        withGrant: true
        resource: resource
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
        subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceType: resourceType
      properties:
        id:
          format: uuid
          type: string
        subjectId:
          format: uuid
          type: string
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
        resource:
          type: string
        resourceType:
          type: string
      type: object
    GetDatabaseResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        warehouseId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdBy: createdBy
        lastModifiedBy: lastModifiedBy
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModified: 2000-01-23T04:56:07.000+00:00
        properties:
          key: properties
      properties:
        id:
          format: uuid
          type: string
        warehouseId:
          format: uuid
          type: string
        name:
          type: string
        createdBy:
          type: string
        createdAt:
          format: date-time
          type: string
        lastModifiedBy:
          type: string
        lastModified:
          format: date-time
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    GetTableResponse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        database: database
        warehouseId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        organizationId:
          format: uuid
          type: string
        warehouseId:
          format: uuid
          type: string
        database:
          type: string
      type: object
    LoadTableStatus:
      example:
        totalLoadedFileCount: 2
        totalLoadedBytes: 5
        timeoutAt: 2000-01-23T04:56:07.000+00:00
        loadTableState: loadTableState
        expireAt: 2000-01-23T04:56:07.000+00:00
        attempt: 6
        totalFileCount: 5
        statusMessage: statusMessage
        createdAt: 2000-01-23T04:56:07.000+00:00
        warehouseId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tableRefId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        progress: 0.8008282
        totalBytes: 1
        tableLoadId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        lastModified: 2000-01-23T04:56:07.000+00:00
      properties:
        tableLoadId:
          format: uuid
          type: string
        warehouseId:
          format: uuid
          type: string
        tableRefId:
          format: uuid
          type: string
        statusMessage:
          type: string
        state:
          type: string
        loadTableState:
          type: string
        progress:
          format: float
          type: number
        attempt:
          format: int32
          type: integer
        totalBytes:
          format: int64
          type: integer
        totalLoadedBytes:
          format: int64
          type: integer
        totalFileCount:
          format: int32
          type: integer
        totalLoadedFileCount:
          format: int32
          type: integer
        lastModified:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        expireAt:
          format: date-time
          type: string
        timeoutAt:
          format: date-time
          type: string
      type: object
    ListTableRoleGrantsResponse:
      example:
        grants:
        - role:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          withGrant: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
        - role:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          withGrant: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
      properties:
        grants:
          items:
            $ref: '#/components/schemas/RoleGrantDetail'
          type: array
      type: object
    RoleGrantDetail:
      example:
        role:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        withGrant: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
      properties:
        id:
          format: uuid
          type: string
        role:
          $ref: '#/components/schemas/RoleRef'
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
      type: object
    RoleRef:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      type: object
    ListDatabaseRoleGrantsResponse:
      example:
        grants:
        - role:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          withGrant: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
        - role:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          withGrant: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
      properties:
        grants:
          items:
            $ref: '#/components/schemas/RoleGrantDetail'
          type: array
      type: object
    DatabaseAuthorization:
      example:
        withGrant: true
        resource: resource
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privilege: ALL
        subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceType: resourceType
      properties:
        id:
          format: uuid
          type: string
        subjectId:
          format: uuid
          type: string
        privilege:
          enum:
          - ALL
          - USAGE
          - MODIFY_ORGANIZATION
          - MANAGE_USERS
          - MANAGE_BILLING
          - MANAGE_GRANTS
          - CREATE_ROLE
          - CREATE_WAREHOUSE
          - LIST_WAREHOUSES
          - MODIFY_ROLE
          - MODIFY_WAREHOUSE
          - LIST_DATABASES
          - CREATE_DATABASE
          - FUTURE_MODIFY_DATABASE
          - FUTURE_LIST_TABLES
          - FUTURE_CREATE_TABLE
          - FUTURE_SELECT
          - FUTURE_UPDATE
          - FUTURE_DROP_TABLE
          - FUTURE_MANAGE_GRANTS_DATABASE
          - FUTURE_MANAGE_GRANTS_TABLE
          - MODIFY_DATABASE
          - LIST_TABLES
          - CREATE_TABLE
          - DROP
          - SELECT
          - UPDATE
          - CREATE_LABEL
          - MODIFY_LABEL
          - APPLY_LABEL
          type: string
        withGrant:
          type: boolean
        resource:
          type: string
        resourceType:
          type: string
      type: object
    GetRoleDatabaseGrantsResponse:
      example:
        authorizations:
        - withGrant: true
          resource: resource
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
          subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceType: resourceType
        - withGrant: true
          resource: resource
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
          subjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resourceType: resourceType
      properties:
        authorizations:
          items:
            $ref: '#/components/schemas/DatabaseAuthorization'
          type: array
      type: object
    ListWarehouseResponse:
      example:
        warehouses:
        - organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          storageProfile: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region: region
          properties:
            key: properties
        - organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          storageProfile: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region: region
          properties:
            key: properties
      properties:
        warehouses:
          items:
            $ref: '#/components/schemas/Warehouse'
          type: array
      type: object
    Warehouse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        storageProfile: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
        properties:
          key: properties
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        region:
          type: string
        organizationId:
          format: uuid
          type: string
        storageProfile:
          format: uuid
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    GetStorageProfileResponse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bucket: bucket
        accountId: accountId
        roleArn: roleArn
        externalId: externalId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
        properties: "{}"
      properties:
        id:
          format: uuid
          type: string
        organizationId:
          format: uuid
          type: string
        accountId:
          type: string
        region:
          type: string
        bucket:
          type: string
        roleArn:
          type: string
        externalId:
          type: string
        properties:
          type: object
      type: object
    GetRoleResponse:
      example:
        children:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        members:
        - withAdmin: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - withAdmin: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        members:
          items:
            $ref: '#/components/schemas/MemberEntry'
          type: array
        children:
          items:
            $ref: '#/components/schemas/RoleRef'
          type: array
      type: object
    MemberEntry:
      example:
        withAdmin: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        id:
          format: uuid
          type: string
        email:
          type: string
        withAdmin:
          type: boolean
      type: object
    ListMembersResponse:
      example:
        members:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
      properties:
        members:
          items:
            $ref: '#/components/schemas/MemberRef'
          type: array
      type: object
    MemberRef:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        id:
          format: uuid
          type: string
        email:
          type: string
      type: object
    GetLabelResponse:
      example:
        allowedResourceTypes:
        - WAREHOUSE
        - WAREHOUSE
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        maskMode: NONE
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        allowedResourceTypes:
          items:
            enum:
            - WAREHOUSE
            - DATABASE
            - TABLE
            - FIELD
            - STORAGE_PROFILE
            - ROLE
            type: string
          type: array
          uniqueItems: true
        maskMode:
          enum:
          - NONE
          - "NULL"
          - HIDE
          type: string
      type: object
    ListRoleLabelGrantsResponse:
      example:
        grants:
        - role:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          withGrant: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
        - role:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          withGrant: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          privilege: ALL
      properties:
        grants:
          items:
            $ref: '#/components/schemas/RoleGrantDetail'
          type: array
      type: object
    ListLabelsResponse:
      example:
        labels:
        - allowedResourceTypes:
          - WAREHOUSE
          - WAREHOUSE
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          maskMode: NONE
        - allowedResourceTypes:
          - WAREHOUSE
          - WAREHOUSE
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          maskMode: NONE
      properties:
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
    GetCredentialResponse:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creator: creator
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        description: description
        active: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cidrs:
        - cidrs
        - cidrs
        type: MEMBER
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        key: key
        memberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        key:
          type: string
        userId:
          format: uuid
          type: string
        memberId:
          format: uuid
          type: string
        organizationId:
          format: uuid
          type: string
        roleId:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        cidrs:
          items:
            type: string
          type: array
        type:
          enum:
          - MEMBER
          - FEDERATED
          - IAM
          - OIDC
          - SERVICE
          type: string
        creator:
          type: string
        active:
          type: boolean
      type: object
  securitySchemes:
    oauth2:
      description: The Tabular API uses Oauth2 with the client credential flow
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /ws/v1/oauth/tokens
      type: oauth2
    TabularJWTAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
