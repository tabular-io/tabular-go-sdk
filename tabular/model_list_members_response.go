/*
Tabular API

Tabular OpenAPI Definition

API version: 1.54.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tabular

import (
	"encoding/json"
)

// checks if the ListMembersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMembersResponse{}

// ListMembersResponse struct for ListMembersResponse
type ListMembersResponse struct {
	Members []MemberRef `json:"members,omitempty"`
}

// NewListMembersResponse instantiates a new ListMembersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMembersResponse() *ListMembersResponse {
	this := ListMembersResponse{}
	return &this
}

// NewListMembersResponseWithDefaults instantiates a new ListMembersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMembersResponseWithDefaults() *ListMembersResponse {
	this := ListMembersResponse{}
	return &this
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *ListMembersResponse) GetMembers() []MemberRef {
	if o == nil || IsNil(o.Members) {
		var ret []MemberRef
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMembersResponse) GetMembersOk() ([]MemberRef, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ListMembersResponse) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MemberRef and assigns it to the Members field.
func (o *ListMembersResponse) SetMembers(v []MemberRef) {
	o.Members = v
}

func (o ListMembersResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMembersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	return toSerialize, nil
}

type NullableListMembersResponse struct {
	value *ListMembersResponse
	isSet bool
}

func (v NullableListMembersResponse) Get() *ListMembersResponse {
	return v.value
}

func (v *NullableListMembersResponse) Set(val *ListMembersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMembersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMembersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMembersResponse(val *ListMembersResponse) *NullableListMembersResponse {
	return &NullableListMembersResponse{value: val, isSet: true}
}

func (v NullableListMembersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMembersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
