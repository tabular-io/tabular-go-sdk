/*
Tabular API

Tabular OpenAPI Definition

API version: 1.56.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tabular

import (
	"encoding/json"
)

// checks if the GetLabelResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLabelResponse{}

// GetLabelResponse struct for GetLabelResponse
type GetLabelResponse struct {
	Id                   *string  `json:"id,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	Description          *string  `json:"description,omitempty"`
	AllowedResourceTypes []string `json:"allowedResourceTypes,omitempty"`
	MaskMode             *string  `json:"maskMode,omitempty"`
}

// NewGetLabelResponse instantiates a new GetLabelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLabelResponse() *GetLabelResponse {
	this := GetLabelResponse{}
	return &this
}

// NewGetLabelResponseWithDefaults instantiates a new GetLabelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLabelResponseWithDefaults() *GetLabelResponse {
	this := GetLabelResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetLabelResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLabelResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetLabelResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetLabelResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetLabelResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLabelResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetLabelResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetLabelResponse) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetLabelResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLabelResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetLabelResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetLabelResponse) SetDescription(v string) {
	o.Description = &v
}

// GetAllowedResourceTypes returns the AllowedResourceTypes field value if set, zero value otherwise.
func (o *GetLabelResponse) GetAllowedResourceTypes() []string {
	if o == nil || IsNil(o.AllowedResourceTypes) {
		var ret []string
		return ret
	}
	return o.AllowedResourceTypes
}

// GetAllowedResourceTypesOk returns a tuple with the AllowedResourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLabelResponse) GetAllowedResourceTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedResourceTypes) {
		return nil, false
	}
	return o.AllowedResourceTypes, true
}

// HasAllowedResourceTypes returns a boolean if a field has been set.
func (o *GetLabelResponse) HasAllowedResourceTypes() bool {
	if o != nil && !IsNil(o.AllowedResourceTypes) {
		return true
	}

	return false
}

// SetAllowedResourceTypes gets a reference to the given []string and assigns it to the AllowedResourceTypes field.
func (o *GetLabelResponse) SetAllowedResourceTypes(v []string) {
	o.AllowedResourceTypes = v
}

// GetMaskMode returns the MaskMode field value if set, zero value otherwise.
func (o *GetLabelResponse) GetMaskMode() string {
	if o == nil || IsNil(o.MaskMode) {
		var ret string
		return ret
	}
	return *o.MaskMode
}

// GetMaskModeOk returns a tuple with the MaskMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLabelResponse) GetMaskModeOk() (*string, bool) {
	if o == nil || IsNil(o.MaskMode) {
		return nil, false
	}
	return o.MaskMode, true
}

// HasMaskMode returns a boolean if a field has been set.
func (o *GetLabelResponse) HasMaskMode() bool {
	if o != nil && !IsNil(o.MaskMode) {
		return true
	}

	return false
}

// SetMaskMode gets a reference to the given string and assigns it to the MaskMode field.
func (o *GetLabelResponse) SetMaskMode(v string) {
	o.MaskMode = &v
}

func (o GetLabelResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLabelResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AllowedResourceTypes) {
		toSerialize["allowedResourceTypes"] = o.AllowedResourceTypes
	}
	if !IsNil(o.MaskMode) {
		toSerialize["maskMode"] = o.MaskMode
	}
	return toSerialize, nil
}

type NullableGetLabelResponse struct {
	value *GetLabelResponse
	isSet bool
}

func (v NullableGetLabelResponse) Get() *GetLabelResponse {
	return v.value
}

func (v *NullableGetLabelResponse) Set(val *GetLabelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLabelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLabelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLabelResponse(val *GetLabelResponse) *NullableGetLabelResponse {
	return &NullableGetLabelResponse{value: val, isSet: true}
}

func (v NullableGetLabelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLabelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
