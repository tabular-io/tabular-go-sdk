/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tabular

import (
	"encoding/json"
)

// checks if the UpdateRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRoleRequest{}

// UpdateRoleRequest struct for UpdateRoleRequest
type UpdateRoleRequest struct {
	RoleName *string `json:"roleName,omitempty"`
}

// NewUpdateRoleRequest instantiates a new UpdateRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoleRequest() *UpdateRoleRequest {
	this := UpdateRoleRequest{}
	return &this
}

// NewUpdateRoleRequestWithDefaults instantiates a new UpdateRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoleRequestWithDefaults() *UpdateRoleRequest {
	this := UpdateRoleRequest{}
	return &this
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *UpdateRoleRequest) GetRoleName() string {
	if o == nil || IsNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleRequest) GetRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *UpdateRoleRequest) HasRoleName() bool {
	if o != nil && !IsNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *UpdateRoleRequest) SetRoleName(v string) {
	o.RoleName = &v
}

func (o UpdateRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleName) {
		toSerialize["roleName"] = o.RoleName
	}
	return toSerialize, nil
}

type NullableUpdateRoleRequest struct {
	value *UpdateRoleRequest
	isSet bool
}

func (v NullableUpdateRoleRequest) Get() *UpdateRoleRequest {
	return v.value
}

func (v *NullableUpdateRoleRequest) Set(val *UpdateRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRoleRequest(val *UpdateRoleRequest) *NullableUpdateRoleRequest {
	return &NullableUpdateRoleRequest{value: val, isSet: true}
}

func (v NullableUpdateRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


